This is assignment 2, which has two parts:

* A
[[file:task_a.org]]
- Det finns alldeles för många beroenden till och från ~TimerListener~.
- Ändra relationen mellan ~CarController~ och ~CarView~
  - Ska inte ha cykliska beroenden.
- ~CarController~ ska inte själv behöva känna till alla sorters ~RoadVehicle~.

Gamla ansvarsområden:
+ CarController :: ändrar state på bilar från knappar; håller alla bilar; sätter igång ~TimerListener~; håller ~CarView~
+ TimerListener :: uppdaterar bilar (deras position)
+ CarView :: håller ~DrawPanel~; håller knappar; skickar knapptryckningar till ~CarController~
+ DrawPanel :: håller bilder; håller punkter; flytter bilpunkter; ritar bilar


Nya ansvarsområden:
+ CarView :: håller ~DrawPanel~; håller knappar; skickar knapptryckningar till ~ButtonController~
+ ButtonController :: interface för ~CarView~ → ~CarController~
+ World :: håller bilar; uppdaterar bilar (deras position)
+ CarController :: håller ~World~; sätter igång ~World~:s timer; håller ~CarView~; är en ~ButtonController~ som använder ~CarChanger~
+ Car :: håller en punkt, en bild, och en ~Vehicle~
+ DrawPanel :: ritar bilar
+ CarChanger :: hjälpklass som vet att det är ~Scania~ som har ~liftBed()~, etc.

** plan
*** flytta
CarChanger    -> styrning.CarChanger
CarController -> styrning.CarController
CarView       -> gui.CarView
DrawPanel     -> gui.DrawPanel

*** skapa:
interface ButtonController
    - kopplar ihop / begränsar beroenden mellan gui / control
    - skapa _click_event_functions_()

*** Nya ansvarsområden:
- model
  class model.World
      - håller ArrayList<Car>, bilar som ska ritas
      - flytta funktionalitet från CarController.TimerListener till World
        genom att skapa metod update() som uppdaterar bilarnas position
  class model.Car
      - flytta funktionalitet från gui.DrawPanel som gäller:
        point:Point, image:BufferedImage, vehicle:Roadvehicle,
        paintComponent(), gui.DrawPanel bara ritar panel
- gui
    class CarView
      - flytta DrawPanel konstruktorn till gui.CarView
      - behåll funktionalitet kopplad till knapptryckningar/bilar
      - ändra: knapptryckningar skickas vidare till ButtonController
  class DrawPanel
      - klassen gui.DrawPanel behåller bara funktionalitet som ritar panel
        (dvs. ritar till slut, bilar i panelen)
      - flytta hit (från CarView) funktionalitet kopplad till
        knapptryckningar/panel
- control
    class CarController
      - implementerar CarView._click_event_functions_()
      - håller kontakt med World, sätter igång World's timer
      - behåll kod från CarController, men generalisera användande av
        bilar och om möjligt minska kodduplicering genom användning av
        metoder i CarChanger
  class CarChanger
      - skapa metoder som ska "veta" att det är "Scania" som har
        "liftBed" etc.
* B
To be added...
